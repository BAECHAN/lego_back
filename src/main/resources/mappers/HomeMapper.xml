<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.HomeMapper">

    <sql id="selectProductInfo">
        select
            a.product_id,
            a.title,
            a.image,
            a.price,
            a.pieces,
            a.ages,
            a.product_number,
            a.date_released,
            a.dtl_img_list,

            b.sale_enabled,
            b.discounting,
            b.rate_discount,
            b.ea

        from product_info a
        inner join product_sale b on a.product_id = b.product_id
    </sql>
    <sql id="andProductFilter">
        <if test="filter.filter_price1.equals(1) or filter.filter_price2.equals(1) or filter.filter_price3.equals(1)
        or filter.filter_price4.equals(1) or filter.filter_price5.equals(1)">
            and (

                <if test="filter.filter_price1.equals(1)">
                    (a.price &gt;= 0 and a.price &lt; 20000)
                </if>

                <if test="filter.filter_price1.equals(1) and (filter.filter_price2.equals(1) or filter.filter_price3.equals(1)
                or filter.filter_price4.equals(1) or filter.filter_price5.equals(1))">
                or
                </if>

                <if test="filter.filter_price2.equals(1)">
                    (a.price &gt;= 20000 and a.price &lt; 50000)
                </if>

                <if test="filter.filter_price2.equals(1) and (filter.filter_price3.equals(1)
                    or filter.filter_price4.equals(1) or filter.filter_price5.equals(1))">
                    or
                </if>

                <if test="filter.filter_price3.equals(1)">
                    (a.price &gt;= 50000 and a.price &lt; 100000)
                </if>

                <if test="filter.filter_price3.equals(1) and (filter.filter_price4.equals(1) or filter.filter_price5.equals(1))">
                    or
                </if>

                <if test="filter.filter_price4.equals(1)">
                    (a.price &gt;= 100000 and a.price &lt; 200000)
                </if>


                <if test="filter.filter_price4.equals(1) and filter.filter_price5.equals(1)">
                    or
                </if>

                <if test="filter.filter_price5.equals(1)">
                    a.price &gt;= 200000
                </if>
            )
        </if>

        <if test="filter.filter_ages7.equals(1) or filter.filter_ages6.equals(1) or filter.filter_ages5.equals(1)
        or filter.filter_ages4.equals(1) or filter.filter_ages3.equals(1) or filter.filter_ages2.equals(1) or filter.filter_ages1.equals(1)">
            and (
            <if test="filter.filter_ages7.equals(1)">
                (a.ages &lt;= 3 and a.ages &gt; 1.5)
            </if>

            <if test="filter.filter_ages7.equals(1) and (filter.filter_ages6.equals(1) or filter.filter_ages5.equals(1)
                or filter.filter_ages4.equals(1) or filter.filter_ages3.equals(1) or filter.filter_ages2.equals(1) or filter.filter_ages1.equals(1))">
                or
            </if>

            <if test="filter.filter_ages6.equals(1)">
                (a.ages &lt;= 5 and a.ages &gt; 3)
            </if>

            <if test="filter.filter_ages6.equals(1) and (filter.filter_ages5.equals(1) or filter.filter_ages4.equals(1)
            or filter.filter_ages3.equals(1) or filter.filter_ages2.equals(1) or filter.filter_ages1.equals(1))">
                or
            </if>

            <if test="filter.filter_ages5.equals(1)">
                (a.ages &lt;= 8 and a.ages &gt; 5)
            </if>

            <if test="filter.filter_ages5.equals(1) and (filter.filter_ages4.equals(1)
            or filter.filter_ages3.equals(1) or filter.filter_ages2.equals(1) or filter.filter_ages1.equals(1))">
                or
            </if>

            <if test="filter.filter_ages4.equals(1)">
                (a.ages &lt;= 13 and a.ages &gt; 8)
            </if>

            <if test="filter.filter_ages4.equals(1) and (filter.filter_ages3.equals(1) or filter.filter_ages2.equals(1) or filter.filter_ages1.equals(1))">
                or
            </if>

            <if test="filter.filter_ages3.equals(1)">
                (a.ages &lt;= 15 and a.ages &gt; 13)
            </if>

            <if test="filter.filter_ages3.equals(1) and (filter.filter_ages2.equals(1) or filter.filter_ages1.equals(1))">
                or
            </if>

            <if test="filter.filter_ages2.equals(1)">
                (a.ages &lt;= 17 and a.ages &gt; 15)
            </if>

            <if test="filter.filter_ages2.equals(1) and filter.filter_ages1.equals(1)">
                or
            </if>

            <if test="filter.filter_ages1.equals(1)">
                a.ages &gt; 17
            </if>
            )

        </if>


        <if test="filter.filter_sale_enabled1.equals(1) or filter.filter_sale_enabled2.equals(1) or filter.filter_sale_enabled3.equals(1)
        or filter.filter_sale_enabled4.equals(1)">
            and (
                <if test="filter.filter_sale_enabled1.equals(1)">
                    b.sale_enabled = 0
                </if>

                <if test="filter.filter_sale_enabled1.equals(1) and (filter.filter_sale_enabled2.equals(1)
                 or filter.filter_sale_enabled3.equals(1) or filter.filter_sale_enabled4.equals(1))">
                    or
                </if>

                <if test="filter.filter_sale_enabled2.equals(1)">
                    b.sale_enabled = 1
                </if>

                <if test="filter.filter_sale_enabled2.equals(1) and (filter.filter_sale_enabled3.equals(1) or filter.filter_sale_enabled4.equals(1))">
                    or
                </if>

                <if test="filter.filter_sale_enabled3.equals(1)">
                    b.sale_enabled = 8
                </if>

                <if test="filter.filter_sale_enabled3.equals(1) and filter.filter_sale_enabled4.equals(1)">
                    or
                </if>

                <if test="filter.filter_sale_enabled4.equals(1)">
                    b.sale_enabled = 9
                </if>
            )
        </if>

        <if test="filter.filter_discounting1.equals(1) or filter.filter_discounting2.equals(1)">
            and (
                <if test="filter.filter_discounting1.equals(1)">
                    b.discounting = 0
                </if>

                <if test="filter.filter_discounting1.equals(1) and filter.filter_discounting2.equals(1)">
                    or
                </if>

                <if test="filter.filter_discounting2.equals(1)">
                    b.discounting = 1
                </if>
            )
        </if>

        <if test="filter.filter_pieces1.equals(1) or filter.filter_pieces2.equals(1) or filter.filter_pieces3.equals(1)
        or filter.filter_pieces4.equals(1) or filter.filter_pieces5.equals(1) or filter.filter_pieces6.equals(1)">
            and (
                <if test="filter.filter_pieces1.equals(1)">
                    (a.pieces &gt;= 1 and a.pieces &lt; 100)
                </if>

                <if test="filter.filter_pieces1.equals(1) and (filter.filter_pieces2.equals(1) or filter.filter_pieces3.equals(1)
                    or filter.filter_pieces4.equals(1) or filter.filter_pieces5.equals(1) or filter.filter_pieces6.equals(1))">
                    or
                </if>

                <if test="filter.filter_pieces2.equals(1)">
                    (a.pieces &gt;= 100 and a.pieces &lt; 250)
                </if>

                <if test="filter.filter_pieces2.equals(1) and (filter.filter_pieces3.equals(1)
                        or filter.filter_pieces4.equals(1) or filter.filter_pieces5.equals(1) or filter.filter_pieces6.equals(1))">
                    or
                </if>

                <if test="filter.filter_pieces3.equals(1)">
                    (a.pieces &gt;= 250 and a.pieces &lt; 500)
                </if>

                <if test="filter.filter_pieces3.equals(1) and (filter.filter_pieces4.equals(1)
                            or filter.filter_pieces5.equals(1) or filter.filter_pieces6.equals(1))">
                    or
                </if>
                <if test="filter.filter_pieces4.equals(1)">
                    (a.pieces &gt;= 500 and a.pieces &lt; 1000)
                </if>

                <if test="filter.filter_pieces4.equals(1) and (filter.filter_pieces5.equals(1) or filter.filter_pieces6.equals(1))">
                    or
                </if>

                <if test="filter.filter_pieces5.equals(1)">
                    (a.pieces &gt;= 1000 and a.pieces &lt; 2000)
                </if>

                <if test="filter.filter_pieces5.equals(1) and filter.filter_pieces6.equals(1)">
                    or
                </if>

                <if test="filter.filter_pieces6.equals(1)">
                    a.pieces &gt; 2000
                </if>
            )
        </if>
    </sql>
    

    <select id="selectListTheme" parameterType="string" resultType="com.example.demo.ThemeVO">
        <!-- selectListTheme -->
        select theme_id,theme_title,theme_title_en,thumbnail_link,theme_dscrp
        from product_theme
        where enabled = 1 and date_released &lt;= NOW();
    </select>

    <select id="selectListProduct" parameterType="Object" resultType="com.example.demo.ProductVO">
        <!-- selectListProduct -->

        <include refid="selectProductInfo" />
        where a.theme_id = #{theme_id} and b.sale_enabled > 0
        <include refid="andProductFilter" />

        <choose>
            <when test="sort != ''">
                <if test="sort.equals('newItem')">
                    order by a.date_released desc
                </if>
                <if test="sort.equals('ascPrice')">
                    order by a.price asc
                </if>
                <if test="sort.equals('descPrice')">
                    order by a.price desc
                </if>
                <if test="sort.equals('descPieces')">
                    order by a.pieces desc
                </if>
                <if test="sort.equals('ascKorean')">
                    order by a.title asc
                </if>
            </when>
            <otherwise>
                order by a.date_released desc
            </otherwise>
        </choose>
        limit #{offset} ,#{take}
    </select>

    <select id="selectListProductCount" parameterType="int" resultType="int">
        <!-- selectListProductCount -->
        select count(1) as cnt
        from product_info a
                 inner join product_sale b on a.product_id = b.product_id
        where a.theme_id = #{theme_id} and b.sale_enabled > 0
        <include refid="andProductFilter" />
    </select>

    <select id="selectListProductFilter" parameterType="int" resultType="java.util.HashMap">
        <!-- selectListProductFilter -->

        select
        a.product_id,
        case when a.price &lt; 20000 then 1
        when a.price &lt; 50000 then 2
        when a.price &lt; 100000 then 3
        when a.price &lt; 200000 then 4
        when a.price &gt;= 200000 then 5
        else 6 end as filter_price,

        case when a.ages > 17 then 1
        when a.ages &lt;= 17 and a.ages > 15 then 2
        when a.ages &lt;= 15 and a.ages > 13 then 3
        when a.ages &lt;= 13 and a.ages > 8 then 4
        when a.ages &lt;= 8 and a.ages > 5 then 5
        when a.ages &lt;= 5 and a.ages > 3 then 6
        when a.ages &lt;= 3 and a.ages > 1.5 then 7
        else 8 end as filter_ages,

        b.sale_enabled as filter_sale_enabled,
        b.discounting as filter_discounting,
        case when a.pieces &lt; 100 then 1
        when a.pieces &lt; 250 then 2
        when a.pieces &lt; 500 then 3
        when a.pieces &lt; 1000 then 4
        when a.pieces &lt; 2000 then 5
        when a.pieces >= 2000 then 6
        else 7 end as filter_pieces

        from product_info a
        inner join product_sale b on a.product_id = b.product_id
        where a.theme_id = #{theme_id} and b.sale_enabled > 0

    </select>

    <select id="selectProductInfo" parameterType="int" resultType="com.example.demo.ProductVO">
        <!-- selectProductInfo -->
        <include refid="selectProductInfo" />
        where a.product_number = #{product_number}
    </select>

    <select id="selectEmailChk" parameterType="java.util.HashMap" resultType="int">
        <!-- selectEmailChk -->
        SELECT COUNT(1) AS CNT
        FROM USER
        WHERE EMAIL = #{email}
        AND ACCOUNT_EXPIRED != TRUE
        AND ACCOUNT_LOCKED != TRUE
        AND ACCOUNT_WITHDRAW != TRUE
    </select>

    <select id="selectUserInfo" parameterType="java.util.HashMap" resultType="com.example.demo.UserVO">
        <!-- selectUserInfo -->
        SELECT
            ID,
            EMAIL,
            NAME,
            IMAGE,
            DATE_CREATED,
            ACCOUNT_EXPIRED,
            ACCOUNT_LOCKED,
            ACCOUNT_WITHDRAW,
            DATE_WITHDRAW,
            GRADE
        FROM USER
        WHERE EMAIL = #{email} AND PASSWORD = #{password}

    </select>

    <insert id="createAccount" parameterType="java.util.HashMap">
        <!-- createAccount -->
        INSERT INTO USER (EMAIL, PASSWORD, NAME, DATE_CREATED, LAST_UPDATED, ACCOUNT_EXPIRED,
                          ACCOUNT_LOCKED, ACCOUNT_WITHDRAW, DATE_WITHDRAW, GRADE)
        VALUES (#{email},#{pw},#{nickname},NOW(),NOW(),FALSE,FALSE,FALSE,NULL,1)
    </insert>

    <select id="selectThemeByProduct" parameterType="int" resultType="com.example.demo.ThemeVO">
        <!-- selectThemeByProduct -->
        select a.theme_id, a.theme_title, a.theme_title_en, a.theme_dscrp, a.thumbnail_link
        from product_theme a
        inner join product_info b
        on a.theme_id = b.theme_id
        where b.product_number = #{product_number}
    </select>

    <select id="selectListViewedProduct" parameterType="java.util.ArrayList" resultType="com.example.demo.ProductVO">
        <!-- selectListViewedProduct -->
        <include refid="selectProductInfo" />
        where b.sale_enabled > 0

        and a.product_number in
        <choose>
            <when test="product_number_arr.size > 0">
                <foreach collection="product_number_arr" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                (0)
            </otherwise>
        </choose>
        <if test="product_number_arr.size > 0">
            ORDER BY FIELD(a.product_number, <foreach collection="product_number_arr" item="item" separator=",">#{item}</foreach>)
        </if>
    </select>
    
    <select id="selectListWishedProduct" parameterType="string" resultType="com.example.demo.ProductVO">
        <!-- selectListWishedProduct -->
        <include refid="selectProductInfo" />
        inner join user_wish c on a.product_id = c.product_id
        where b.sale_enabled > 0
        and c.email = #{email}
        and c.isWish = 1
        order by c.date_registed desc
    </select>
</mapper>
